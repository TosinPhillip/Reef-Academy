0. Get how to use flask programming in the HTML and how to make importations into the app.py file
1. Fine tune the home page 
2. Fix the login pathways - make the admin page to require login
3. Secure the database flowpaths
4. Create a means of uploading questions and answers
5. Fix the exam selection page to post to the database and the exam answering page to have a timer.(Students can choose the number of FREE questions they want to answer but cannot select the time for the questions. The time will be calculated based on the standard time per question. For SPECIAL questions, the examiner fixes the time and number of questions)
6. Work on the randomization of the questions
7. Work on security and documentation
8. Get logos and images
9. Publicize and upgrade as you go.
10. Get a domain
11. Add more features
12. Create an admin page for posting questions, answers, videos and tutorials and blogs


ON THE PROFILE
-Name
-Email
-Picture
-

Self-filled
-Exams preparing for
-Courses

Auto-filled
-Previous scores in tests
-Standing in percentile (compared to people in the same class or preparing for the same examination)


ON THE QUESTIONS
-Question type: (OBJ, Fill in the gap)
-Question
-Option
-Answer
-Explanation
-Video
-Image/Code/Equation (Optional)
-Availability tag (Free or requires login) Free questions can be answered by anybody even without logging in. Questions that require login can only be seen by logged in users that have a specific code that leads to the exam.


